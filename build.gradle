plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.lifestockserver'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.amazonaws:aws-java-sdk-s3'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.1'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
	implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.3.1.RELEASE'// Redis
	//batch 의존성
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework:spring-context-support'

}

task executeBatchSchema(type: Exec) {
	def dbUser = 'yourUsername' // DB 사용자 이름
	def dbPassword = 'yourPassword' // DB 비밀번호
	def dbName = 'lifestock' // 데이터베이스 이름
	def dbHost = 'localhost' // 데이터베이스 호스트
	def sqlFile = file('src/main/resources/db/schema-mysql.sql') // SQL 파일 경로

	commandLine 'mysql', '-u', dbUser, '-p' + dbPassword, '-h', dbHost, dbName, '<', sqlFile.absolutePath
}



tasks.named('test') {
	useJUnitPlatform()
}
